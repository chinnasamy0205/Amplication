/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { HmProtestAccountCreateNestedManyWithoutHmProtestProjectsInput } from "./HmProtestAccountCreateNestedManyWithoutHmProtestProjectsInput";
import { ValidateNested, IsOptional, IsString, IsDate } from "class-validator";
import { Type } from "class-transformer";
import { UserCreateNestedManyWithoutHmProtestProjectsInput } from "./UserCreateNestedManyWithoutHmProtestProjectsInput";
@InputType()
class HmProtestProjectCreateInput {
  @ApiProperty({
    required: false,
    type: () => HmProtestAccountCreateNestedManyWithoutHmProtestProjectsInput,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountCreateNestedManyWithoutHmProtestProjectsInput)
  @IsOptional()
  @Field(() => HmProtestAccountCreateNestedManyWithoutHmProtestProjectsInput, {
    nullable: true,
  })
  accountId?: HmProtestAccountCreateNestedManyWithoutHmProtestProjectsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  projectDesc?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  projectEndDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  projectId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  projectName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  projectStDate?: Date | null;

  @ApiProperty({
    required: true,
    type: () => UserCreateNestedManyWithoutHmProtestProjectsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutHmProtestProjectsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutHmProtestProjectsInput, {
    nullable: true,
  })
  userId?: UserCreateNestedManyWithoutHmProtestProjectsInput;
}
export { HmProtestProjectCreateInput };
