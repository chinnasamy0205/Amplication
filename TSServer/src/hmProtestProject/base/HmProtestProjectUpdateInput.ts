/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { HmProtestAccountUpdateManyWithoutHmProtestProjectsInput } from "./HmProtestAccountUpdateManyWithoutHmProtestProjectsInput";
import { ValidateNested, IsOptional, IsString, IsDate } from "class-validator";
import { Type } from "class-transformer";
import { UserUpdateManyWithoutHmProtestProjectsInput } from "./UserUpdateManyWithoutHmProtestProjectsInput";
@InputType()
class HmProtestProjectUpdateInput {
  @ApiProperty({
    required: false,
    type: () => HmProtestAccountUpdateManyWithoutHmProtestProjectsInput,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountUpdateManyWithoutHmProtestProjectsInput)
  @IsOptional()
  @Field(() => HmProtestAccountUpdateManyWithoutHmProtestProjectsInput, {
    nullable: true,
  })
  accountId?: HmProtestAccountUpdateManyWithoutHmProtestProjectsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  projectDesc?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  projectEndDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  projectId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  projectName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  projectStDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutHmProtestProjectsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutHmProtestProjectsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutHmProtestProjectsInput, {
    nullable: true,
  })
  userId?: UserUpdateManyWithoutHmProtestProjectsInput;
}
export { HmProtestProjectUpdateInput };
