/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumHmProtestAccountAccountStatus } from "./EnumHmProtestAccountAccountStatus";
import { HmProtestAccountUserUpdateManyWithoutHmProtestAccountsInput } from "./HmProtestAccountUserUpdateManyWithoutHmProtestAccountsInput";
import { HmProtestProjectUpdateManyWithoutHmProtestAccountsInput } from "./HmProtestProjectUpdateManyWithoutHmProtestAccountsInput";
import { UserUpdateManyWithoutHmProtestAccountsInput } from "./UserUpdateManyWithoutHmProtestAccountsInput";
@InputType()
class HmProtestAccountUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountBdm?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountDesc?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountDm?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  accountEndDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountPm?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumHmProtestAccountAccountStatus,
  })
  @IsEnum(EnumHmProtestAccountAccountStatus)
  @IsOptional()
  @Field(() => EnumHmProtestAccountAccountStatus, {
    nullable: true,
  })
  accountStatus?: "Active" | "InActive" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  accountStDate?: Date;

  @ApiProperty({
    required: false,
    type: () => HmProtestAccountUserUpdateManyWithoutHmProtestAccountsInput,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountUserUpdateManyWithoutHmProtestAccountsInput)
  @IsOptional()
  @Field(() => HmProtestAccountUserUpdateManyWithoutHmProtestAccountsInput, {
    nullable: true,
  })
  hmProtestAccountUsers?: HmProtestAccountUserUpdateManyWithoutHmProtestAccountsInput;

  @ApiProperty({
    required: false,
    type: () => HmProtestProjectUpdateManyWithoutHmProtestAccountsInput,
  })
  @ValidateNested()
  @Type(() => HmProtestProjectUpdateManyWithoutHmProtestAccountsInput)
  @IsOptional()
  @Field(() => HmProtestProjectUpdateManyWithoutHmProtestAccountsInput, {
    nullable: true,
  })
  hmProtestProjects?: HmProtestProjectUpdateManyWithoutHmProtestAccountsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutHmProtestAccountsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutHmProtestAccountsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutHmProtestAccountsInput, {
    nullable: true,
  })
  userId?: UserUpdateManyWithoutHmProtestAccountsInput;
}
export { HmProtestAccountUpdateInput };
