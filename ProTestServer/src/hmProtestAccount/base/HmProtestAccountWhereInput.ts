/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumHmProtestAccountAccountStatus } from "./EnumHmProtestAccountAccountStatus";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { HmProtestAccountUserListRelationFilter } from "../../hmProtestAccountUser/base/HmProtestAccountUserListRelationFilter";
import { HmProtestProjectListRelationFilter } from "../../hmProtestProject/base/HmProtestProjectListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";
@InputType()
class HmProtestAccountWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  accountBdm?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  accountDesc?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  accountDm?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  accountEndDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  accountId?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  accountName?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  accountPm?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumHmProtestAccountAccountStatus,
  })
  @IsEnum(EnumHmProtestAccountAccountStatus)
  @IsOptional()
  @Field(() => EnumHmProtestAccountAccountStatus, {
    nullable: true,
  })
  accountStatus?: "Active" | "InActive";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  accountStDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => HmProtestAccountUserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountUserListRelationFilter)
  @IsOptional()
  @Field(() => HmProtestAccountUserListRelationFilter, {
    nullable: true,
  })
  hmProtestAccountUsers?: HmProtestAccountUserListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HmProtestProjectListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HmProtestProjectListRelationFilter)
  @IsOptional()
  @Field(() => HmProtestProjectListRelationFilter, {
    nullable: true,
  })
  hmProtestProjects?: HmProtestProjectListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  userId?: UserListRelationFilter;
}
export { HmProtestAccountWhereInput };
