/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumHmProtestAccountAccountStatus } from "./EnumHmProtestAccountAccountStatus";
import { HmProtestAccountUserCreateNestedManyWithoutHmProtestAccountsInput } from "./HmProtestAccountUserCreateNestedManyWithoutHmProtestAccountsInput";
import { HmProtestProjectCreateNestedManyWithoutHmProtestAccountsInput } from "./HmProtestProjectCreateNestedManyWithoutHmProtestAccountsInput";
import { UserCreateNestedManyWithoutHmProtestAccountsInput } from "./UserCreateNestedManyWithoutHmProtestAccountsInput";
@InputType()
class HmProtestAccountCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountBdm?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountDesc?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountDm?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  accountEndDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountId?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  accountName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  accountPm?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumHmProtestAccountAccountStatus,
  })
  @IsEnum(EnumHmProtestAccountAccountStatus)
  @IsOptional()
  @Field(() => EnumHmProtestAccountAccountStatus, {
    nullable: true,
  })
  accountStatus?: "Active" | "InActive" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  accountStDate!: Date;

  @ApiProperty({
    required: false,
    type: () =>
      HmProtestAccountUserCreateNestedManyWithoutHmProtestAccountsInput,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountUserCreateNestedManyWithoutHmProtestAccountsInput)
  @IsOptional()
  @Field(
    () => HmProtestAccountUserCreateNestedManyWithoutHmProtestAccountsInput,
    {
      nullable: true,
    }
  )
  hmProtestAccountUsers?: HmProtestAccountUserCreateNestedManyWithoutHmProtestAccountsInput;

  @ApiProperty({
    required: false,
    type: () => HmProtestProjectCreateNestedManyWithoutHmProtestAccountsInput,
  })
  @ValidateNested()
  @Type(() => HmProtestProjectCreateNestedManyWithoutHmProtestAccountsInput)
  @IsOptional()
  @Field(() => HmProtestProjectCreateNestedManyWithoutHmProtestAccountsInput, {
    nullable: true,
  })
  hmProtestProjects?: HmProtestProjectCreateNestedManyWithoutHmProtestAccountsInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutHmProtestAccountsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutHmProtestAccountsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutHmProtestAccountsInput, {
    nullable: true,
  })
  userId?: UserCreateNestedManyWithoutHmProtestAccountsInput;
}
export { HmProtestAccountCreateInput };
