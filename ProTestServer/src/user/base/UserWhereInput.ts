/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { HmProtestAccountListRelationFilter } from "../../hmProtestAccount/base/HmProtestAccountListRelationFilter";
import { HmProtestAccountUserWhereUniqueInput } from "../../hmProtestAccountUser/base/HmProtestAccountUserWhereUniqueInput";
import { HmProtestFeatureWhereUniqueInput } from "../../hmProtestFeature/base/HmProtestFeatureWhereUniqueInput";
import { HmProtestProjectListRelationFilter } from "../../hmProtestProject/base/HmProtestProjectListRelationFilter";
import { HmProtestRequirementListRelationFilter } from "../../hmProtestRequirement/base/HmProtestRequirementListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { EnumUserUserPlan } from "./EnumUserUserPlan";
import { EnumUserUserStatus } from "./EnumUserUserStatus";
@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => HmProtestAccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountListRelationFilter)
  @IsOptional()
  @Field(() => HmProtestAccountListRelationFilter, {
    nullable: true,
  })
  hmProtestAccounts?: HmProtestAccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HmProtestAccountUserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountUserWhereUniqueInput)
  @IsOptional()
  @Field(() => HmProtestAccountUserWhereUniqueInput, {
    nullable: true,
  })
  hmProtestAccountUser?: HmProtestAccountUserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => HmProtestFeatureWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HmProtestFeatureWhereUniqueInput)
  @IsOptional()
  @Field(() => HmProtestFeatureWhereUniqueInput, {
    nullable: true,
  })
  hmProtestFeature?: HmProtestFeatureWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => HmProtestProjectListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HmProtestProjectListRelationFilter)
  @IsOptional()
  @Field(() => HmProtestProjectListRelationFilter, {
    nullable: true,
  })
  hmProtestProjects?: HmProtestProjectListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HmProtestRequirementListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HmProtestRequirementListRelationFilter)
  @IsOptional()
  @Field(() => HmProtestRequirementListRelationFilter, {
    nullable: true,
  })
  hmProtestRequirements?: HmProtestRequirementListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  userDesc?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  userEndDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserUserPlan,
  })
  @IsEnum(EnumUserUserPlan)
  @IsOptional()
  @Field(() => EnumUserUserPlan, {
    nullable: true,
  })
  userPlan?: "Basic" | "Full" | "Free";

  @ApiProperty({
    required: false,
    enum: EnumUserUserStatus,
  })
  @IsEnum(EnumUserUserStatus)
  @IsOptional()
  @Field(() => EnumUserUserStatus, {
    nullable: true,
  })
  userStatus?: "Active" | "InActive";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  userStDate?: DateTimeNullableFilter;
}
export { UserWhereInput };
