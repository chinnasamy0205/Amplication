/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsJSON,
  IsDate,
  IsEnum,
} from "class-validator";
import { HmProtestAccountUpdateManyWithoutUsersInput } from "./HmProtestAccountUpdateManyWithoutUsersInput";
import { Type } from "class-transformer";
import { HmProtestAccountUserWhereUniqueInput } from "../../hmProtestAccountUser/base/HmProtestAccountUserWhereUniqueInput";
import { HmProtestFeatureWhereUniqueInput } from "../../hmProtestFeature/base/HmProtestFeatureWhereUniqueInput";
import { HmProtestProjectUpdateManyWithoutUsersInput } from "./HmProtestProjectUpdateManyWithoutUsersInput";
import { HmProtestRequirementUpdateManyWithoutUsersInput } from "./HmProtestRequirementUpdateManyWithoutUsersInput";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumUserUserPlan } from "./EnumUserUserPlan";
import { EnumUserUserStatus } from "./EnumUserUserStatus";
@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => HmProtestAccountUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => HmProtestAccountUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  hmProtestAccounts?: HmProtestAccountUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => HmProtestAccountUserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HmProtestAccountUserWhereUniqueInput)
  @IsOptional()
  @Field(() => HmProtestAccountUserWhereUniqueInput, {
    nullable: true,
  })
  hmProtestAccountUser?: HmProtestAccountUserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => HmProtestFeatureWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HmProtestFeatureWhereUniqueInput)
  @IsOptional()
  @Field(() => HmProtestFeatureWhereUniqueInput, {
    nullable: true,
  })
  hmProtestFeature?: HmProtestFeatureWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => HmProtestProjectUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => HmProtestProjectUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => HmProtestProjectUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  hmProtestProjects?: HmProtestProjectUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => HmProtestRequirementUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => HmProtestRequirementUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => HmProtestRequirementUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  hmProtestRequirements?: HmProtestRequirementUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSON()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  userDesc?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  userEndDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    enum: EnumUserUserPlan,
  })
  @IsEnum(EnumUserUserPlan)
  @IsOptional()
  @Field(() => EnumUserUserPlan, {
    nullable: true,
  })
  userPlan?: "Basic" | "Full" | "Free" | null;

  @ApiProperty({
    required: false,
    enum: EnumUserUserStatus,
  })
  @IsEnum(EnumUserUserStatus)
  @IsOptional()
  @Field(() => EnumUserUserStatus, {
    nullable: true,
  })
  userStatus?: "Active" | "InActive" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  userStDate?: Date | null;
}
export { UserUpdateInput };
