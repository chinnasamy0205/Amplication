/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, IsDate, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { RequirementCreateNestedManyWithoutFeaturesInput } from "./RequirementCreateNestedManyWithoutFeaturesInput";
import { UserCreateNestedManyWithoutFeaturesInput } from "./UserCreateNestedManyWithoutFeaturesInput";
@InputType()
class FeatureCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  featureDesc?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  featureEndDate?: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  featureId!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  featureName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  featurePrereq?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  featureProjId?: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  featureStDate!: Date;

  @ApiProperty({
    required: false,
    type: () => RequirementCreateNestedManyWithoutFeaturesInput,
  })
  @ValidateNested()
  @Type(() => RequirementCreateNestedManyWithoutFeaturesInput)
  @IsOptional()
  @Field(() => RequirementCreateNestedManyWithoutFeaturesInput, {
    nullable: true,
  })
  hmProtestRequirements?: RequirementCreateNestedManyWithoutFeaturesInput;

  @ApiProperty({
    required: true,
    type: () => UserCreateNestedManyWithoutFeaturesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutFeaturesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutFeaturesInput, {
    nullable: true,
  })
  userId?: UserCreateNestedManyWithoutFeaturesInput;
}
export { FeatureCreateInput };
