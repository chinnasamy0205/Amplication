/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { FeatureCreateNestedManyWithoutRequirementsInput } from "./FeatureCreateNestedManyWithoutRequirementsInput";
import { Type } from "class-transformer";
import { EnumRequirementStatus } from "./EnumRequirementStatus";
import { UserCreateNestedManyWithoutRequirementsInput } from "./UserCreateNestedManyWithoutRequirementsInput";
@InputType()
class RequirementCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  modelChanged?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reqDesc?: string | null;

  @ApiProperty({
    required: false,
    type: () => FeatureCreateNestedManyWithoutRequirementsInput,
  })
  @ValidateNested()
  @Type(() => FeatureCreateNestedManyWithoutRequirementsInput)
  @IsOptional()
  @Field(() => FeatureCreateNestedManyWithoutRequirementsInput, {
    nullable: true,
  })
  reqFeatureId?: FeatureCreateNestedManyWithoutRequirementsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reqId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reqModelname?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reqModelpath?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reqName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reqPrereq?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reqType?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumRequirementStatus,
  })
  @IsEnum(EnumRequirementStatus)
  @IsOptional()
  @Field(() => EnumRequirementStatus, {
    nullable: true,
  })
  status?: "Active" | "InActive" | null;

  @ApiProperty({
    required: true,
    type: () => UserCreateNestedManyWithoutRequirementsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutRequirementsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutRequirementsInput, {
    nullable: true,
  })
  userId?: UserCreateNestedManyWithoutRequirementsInput;
}
export { RequirementCreateInput };
